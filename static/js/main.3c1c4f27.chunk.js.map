{"version":3,"sources":["../../src/Helpers.js","../../src/index.js","../../src/Resize.js","App.js","index.js"],"names":["bodyHeight","change","height","currentZoom","low","high","Candle","data","chartHeight","chartWidth","id","svgRef","useRef","wrapperRef","lineGenerator","line","dimensions","ref","useState","setDimensions","useEffect","observeTarget","resizeObserver","ResizeObserver","entries","entry","useResizeObserver","values","setValues","dom","setDom","setCurrentZoom","formatTime","setFormatTime","totalNumber","setTotalNumber","userHeight","setUserHeight","userWidth","setUserWidth","width","yScale","scaleLinear","xScale","d","range","toolTipCandle","select","toolTipTime","svg","ev","pointer","candle","time","svgContent","newXscale","newYscale","xAxis","index","timeFormat","yAxis","axisLeft","o","c","wickWidth","num","translate","bodyColor","bodyWidth","highLow","barHeightHelper","zoomBehavior","zoomState","zoomTransform","style","marginBottom","cursor","background","overflow","display","x","y","className","clipPath","color","justifyContent","alignItems","type","noWeekends","lows","highs","Date","Math","setChart","App","React","fetch","then","results","json","temp","i","length","h","l","t","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c1c4f27.chunk.js","sourcesContent":["export const highLow = (data) => {\n  if (data[0] > data[3]) {\n    return data[0]\n  } else {\n    return data[3]\n  }\n}\n\nexport const barHeightHelper = (data) => {\n  if (data[0] > data[3]) {\n    return data[0] - data[3]\n  } else {\n    return data[3] - data[0]\n  }\n}\n\nexport const bodyHeight = (change, height, currentZoom, low, high) => {\n  if (currentZoom) {\n    return (height / (high - low)) * change * currentZoom.k\n  } else {\n    return (height / (high - low)) * change\n  }\n}\n\nexport const bodyWidth = (currentZoom, width, totalNumber) => {\n  if (currentZoom) {\n    return (width / (totalNumber * 2)) * currentZoom.k\n  } else {\n    return width / (totalNumber * 2)\n  }\n}\n\nexport const wickWidth = (currentZoom, width, totalNumber) => {\n  if (currentZoom) {\n    return (width / (totalNumber * 10)) * currentZoom.k\n  } else {\n    return width / (totalNumber * 10)\n  }\n}\n\nexport const bodyColor = (o, c, width, num, currentZoom) => {\n  let translate = width / (num * 4)\n\n  if (currentZoom) {\n    translate = translate * currentZoom.k\n  }\n  if (o < c) {\n    return (\n      'outline: thin solid #B3ED93; transform: translateX(-' + translate + 'px)'\n    )\n  } else {\n    return (\n      'outline: thin solid #ED9393; transform: translateX(-' + translate + 'px)'\n    )\n  }\n}\n\nexport const wickColor = (o, c) => {\n  if (o < c) {\n    return '#B3ED93'\n  } else {\n    return '#ED9393'\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport {\n  select,\n  axisBottom,\n  scaleLinear,\n  axisLeft,\n  zoom,\n  zoomTransform,\n  scaleTime,\n  timeFormat,\n  range,\n  pointer,\n  line\n} from 'd3'\nimport useResizeObserver from './Resize'\nimport ReactLoading from 'react-loading'\nimport {\n  highLow,\n  barHeightHelper,\n  bodyHeight,\n  bodyWidth,\n  wickWidth,\n  bodyColor,\n  wickColor\n} from './Helpers'\n\nexport const Candle = ({\n  data,\n  chartHeight,\n  chartWidth,\n  id = 'myZoomableLineChart'\n}) => {\n  // set constants\n  const svgRef = useRef()\n  const wrapperRef = useRef()\n  const lineGenerator = line()\n  const dimensions = useResizeObserver(wrapperRef)\n  const [values, setValues] = useState([])\n  const [dom, setDom] = useState([])\n  const [currentZoom, setCurrentZoom] = useState(null)\n  const [formatTime, setFormatTime] = useState(true)\n  const [totalNumber, setTotalNumber] = useState(0)\n  const [userHeight, setUserHeight] = useState('20vh')\n  const [userWidth, setUserWidth] = useState('40vw')\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    if (!dimensions || !data) return\n\n    // scales //\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect()\n    const yScale = scaleLinear().domain([dom[0], dom[1]]).range([height, 0])\n    const xScale = scaleTime()\n      .domain(values.map((d) => d[4]))\n      .range(range(0, width, width / values.length))\n    // end scales //\n\n    // tooltip //\n    var toolTipCandle = select('.tooltip-area-candle')\n      .style('opacity', 1)\n      .attr('x', height - 20)\n    var toolTipTime = select('.tooltip-area-time')\n      .style('opacity', 1)\n      .attr('y', width + 10)\n\n    const svg = select(svgRef.current).on('mousemove', function (ev) {\n      svg\n        .select('.y-pointer')\n        .attr(\n          'd',\n          lineGenerator([\n            [0, pointer(ev)[1]],\n            [width, pointer(ev)[1]]\n          ])\n        )\n        .attr('stroke', ' rgb(96, 103, 109)')\n\n      svg\n        .select('.x-pointer')\n        .attr(\n          'd',\n          lineGenerator([\n            [pointer(ev)[0], 0],\n            [pointer(ev)[0], height]\n          ])\n        )\n        .attr('stroke', ' rgb(96, 103, 109)')\n\n      const candle = select('.tooltip-candle-text')\n      const time = select('.tooltip-time-text')\n\n      time.text(`${xScale.invert(pointer(ev)[0]).toLocaleTimeString()}`)\n      candle.text(`${yScale.invert(pointer(ev)[1]).toFixed(2)}`)\n\n      toolTipCandle\n        .attr('transform', `translate(10, ${pointer(ev)[1] - 10})`)\n        .attr('stroke', 'rgb(96, 103, 109)')\n        .attr('font-weight', '10')\n        .attr('font-size', '0.8em')\n      toolTipTime\n        .attr('transform', `translate(${pointer(ev)[0] + 10},10)`)\n        .attr('stroke', 'rgb(96, 103, 109)')\n        .attr('font-weight', '10')\n        .attr('font-size', '0.8em')\n    })\n    const svgContent = svg.select('.content')\n\n    // set zoom state //\n    if (currentZoom) {\n      const newXscale = currentZoom.rescaleX(xScale)\n      const newYscale = currentZoom.rescaleY(yScale)\n      xScale.domain(newXscale.domain())\n      yScale.domain(newYscale.domain())\n    }\n    // end zoom state //\n\n    // axes //\n    const xAxis = axisBottom(xScale)\n      .tickValues(\n        values.map((d, index) =>\n          index !== 0\n            ? values[index - 1][4].getDay() !== d[4].getDay()\n              ? d[4]\n              : ''\n            : d[4]\n        )\n      )\n      .tickFormat(timeFormat('%a %b %d'))\n\n    svg\n      .select('.x-axis')\n      .attr('transform', `translate(0, ${height})`)\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em')\n      .attr('transform', 'rotate(-65)')\n\n    const yAxis = axisLeft(yScale)\n    svg.select('.y-axis').call(yAxis)\n    // end axes //\n\n    // draw //\n    svgContent\n      .selectAll('.line')\n      .data(values)\n      .join('rect')\n      .attr('class', 'line')\n      .attr('fill', (data) => wickColor(data[0], data[3]))\n      .attr('x', (data) => xScale(data[4]))\n      .attr('y', (data) => yScale(data[1]))\n      .attr('width', wickWidth(currentZoom, width, totalNumber))\n      .attr('height', (data) =>\n        bodyHeight(data[1] - data[2], height, currentZoom, dom[0], dom[1])\n      )\n    svgContent\n      .selectAll('.bar')\n      .data(values)\n      .join('rect')\n      .attr('class', 'bar')\n      .attr('fill', 'white')\n      .attr('style', (data) =>\n        bodyColor(data[0], data[3], width, totalNumber, currentZoom)\n      )\n      .attr('x', (data) => xScale(data[4]))\n      .attr('width', (data) => bodyWidth(currentZoom, width, totalNumber))\n      .attr('y', (data) => yScale(highLow(data)))\n      .attr('height', (data) =>\n        bodyHeight(barHeightHelper(data), height, currentZoom, dom[0], dom[1])\n      )\n    // end draw //\n\n    // zoom behavior //\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 15])\n      .translateExtent([\n        [0, 0],\n        [width, height]\n      ])\n      .on('zoom', () => {\n        const zoomState = zoomTransform(svgRef.current)\n        setCurrentZoom(zoomState)\n      })\n\n    svg.call(zoomBehavior)\n    // end zoom behavior //\n  }, [currentZoom, dimensions])\n\n  // check for data and set state variables\n  function setChart(x) {\n    if (x.length > 1) {\n      // timeScale\n      if (formatTime) {\n        const noWeekends = []\n        var lows = []\n        var highs = []\n        x.forEach(function (d, index) {\n          lows.push(d[2])\n          highs.push(d[1])\n          d[4] = new Date(d[4] * 1000)\n          if (\n            d[4].getDay() === 0 ||\n            d[4].getDay() === 6 ||\n            d[4].getHours() < 9 ||\n            d[4].getHours() > 16\n          ) {\n          } else {\n            noWeekends.push(d)\n          }\n        })\n        lows = Math.min(...lows)\n        highs = Math.max(...highs)\n        setValues(noWeekends)\n        setDom([\n          lows - lows / noWeekends.length,\n          highs + highs / noWeekends.length\n        ])\n        setTotalNumber(noWeekends.length)\n        setFormatTime(false)\n      }\n      if (chartHeight) {\n        setUserHeight(chartHeight)\n      }\n      if (chartWidth) {\n        setUserWidth(chartWidth)\n      }\n    } else {\n      return (\n        <ReactLoading\n          type='bars'\n          color='rgb(96, 103, 109)'\n          height='10%'\n          width='10%'\n        />\n      )\n    }\n  }\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{ marginBottom: '2rem', width: userWidth, height: userHeight }}\n    >\n      {values.length > 1 ? (\n        <svg\n          ref={svgRef}\n          style={{\n            height: '100%',\n            cursor: 'crosshair',\n            background: 'rgb(255, 255, 255)',\n            overflow: 'visible',\n            display: 'block',\n            width: '100%'\n          }}\n        >\n          <defs>\n            <clipPath id={id}>\n              <rect x='0' y='0' width='100%' height='100%' />\n            </clipPath>\n          </defs>\n          <g className='content' clipPath={`url(#${id})`}>\n            <path className='y-pointer' />\n            <path className='x-pointer' />\n          </g>\n          <g\n            className='x-axis'\n            clipPath={`url(#${id})`}\n            style={{ color: 'color: rgb(96, 103, 109)' }}\n          />\n          <g className='y-axis' style={{ color: 'color: rgb(96, 103, 109)' }} />\n          <g className='tooltip-area-candle'>\n            <text className='tooltip-candle-text' />\n          </g>\n          <g className='tooltip-area-time'>\n            <text className='tooltip-time-text' />\n          </g>\n        </svg>\n      ) : (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: userHeight,\n            width: userWidth\n          }}\n        >\n          {' '}\n          {setChart(data)}{' '}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null)\n  useEffect(() => {\n    const observeTarget = ref.current\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect)\n      })\n    })\n    resizeObserver.observe(observeTarget)\n    return () => {\n      resizeObserver.unobserve(observeTarget)\n    }\n  }, [ref])\n  return dimensions\n}\n\nexport default useResizeObserver\n","import React from 'react'\n\nimport { Candle } from 'clean-candles'\n\nimport \"./App.css\";\n\nconst App = () => {\n\n  const [values, setValues] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch('https://finnhub.io/api/v1/stock/candle?symbol=AAPL&resolution=60&from=1500543327&to=1580645165&token=sandbox_c007t0n48v6r2qrrjr90')\n    .then(results => results.json())\n    .then(data => {\n      let temp = []\n      for ( let i = 0; i < data.c.length; i++){\n        let x = [data.o[i], data.h[i], data.l[i], data.c[i], data.t[i]]\n        temp.push(x)\n      }\n      setValues(temp)\n    })}, [])\n\n\n  return (\n    <div className=\"chart-container\">\n      <Candle data={values} chartHeight={'50vh'} chartWidth={'50vw'}></Candle>\n    </div>\n  )}\n\nexport default App\n\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}